% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ceclust.R
\name{CECpredict}
\alias{CECpredict}
\title{Prediction of missing columns conditional on the cluster}
\usage{
CECpredict(Zpred, params, idColToPred)
}
\arguments{
\item{Zpred}{\code{data.frame} or \code{matrix} of new observations.}

\item{params}{\code{list}. Model parameters returned by \code{\link{CECclassif}}.}

\item{idColToPred}{\code{integer} or \code{character}. Indices or names of
the columns to be predicted.}
}
\value{
A \code{data.frame} of size \code{nrow(Zpred) * length(idColToPred)}
containing the predicted values (factors and/or numerics).
}
\description{
Using the model parameters \code{params} learned by \code{\link{CECclassif}},
predicts the values of the columns \code{idColToPred} for \code{Zpred}.
Factor columns are predicted by the argmax of discrete probabilities,
and numeric columns by the Gaussian conditional mean.
}
\examples{
\donttest{
set.seed(123)
n <- 100
# Two Gaussian clusters on 2 variables
x1 <- rnorm(n, 0, 1); x2 <- rnorm(n, 0, 1)
x3 <- rnorm(n, 3, 1); x4 <- rnorm(n, 3, 1)
X  <- rbind(cbind(x1, x2), cbind(x3, x4))
lab <- factor(rep(c("A","B"), each = n))
Z   <- data.frame(X1 = X[,1], X2 = X[,2], Cat = lab)

fit <- CECclassif(Z, Nshots = 50, Nloop = 200)

# Predict the factor column 'Cat' (by removing it from Zpred)
Znew <- Z[, c("X1","X2")]
preds_cat <- CECpredict(Znew, fit$params, idColToPred = "Cat")

# Predict a missing numeric variable
Znew <- Z[, c("X2","Cat")]
preds_x1 <- CECpredict(Znew, fit$params, idColToPred = "X1")
}

}
\seealso{
\code{\link{CECclassif}}, \code{\link{CECclassifNewData}}
}
